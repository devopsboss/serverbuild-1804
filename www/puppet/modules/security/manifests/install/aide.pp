# Class: git
# ===========================
#
# Full description of class git here.
#
# Parameters
# ----------
#
# Document parameters here.
#
# * `sample parameter`
# Explanation of what this parameter affects and what it defaults to.
# e.g. "Specify one or more upstream ntp servers as an array."
#
# Variables
# ----------
#
# Here you should define a list of variables that this module would require.
#
# * `sample variable`
#  Explanation of how this variable affects the function of this class and if
#  it has a default. e.g. "The parameter enc_ntp_servers must be set by the
#  External Node Classifier as a comma separated list of hostnames." (Note,
#  global variables should be avoided in favor of class parameters as
#  of Puppet 2.6.)
#
# Examples
# --------
#
# @example
#    class { 'git':
#      servers => [ 'pool.ntp.org', 'ntp.local.company.com' ],
#    }
#
# Authors
# -------
#
# Author Name <author@domain.com>
#
# Copyright
# ---------
#
# Copyright 2018 Your name here, unless otherwise noted.
#
class security::install::aide (
  $aide_db_path = undef
) {

  #
  # * AIDE
  #
  /* Aide also known as Advanced Intrusion Detection Environment is an open source host based file and directory integrity checker.
  *  It is a replacement for the well-known Tripwire integrity checker that can be used to monitor filesystem for unauthorized change.
  *  also see: https://blog.rapid7.com/2017/06/30/how-to-install-and-configure-aide-on-ubuntu-linux/
  */

  package { 'aide':
    ensure  => latest,
    require => Exec['apt-upgrade'],
  }
  # create a new database using aideinit
  exec { 'aideinit':
    path    => '/bin:/usr/bin:/usr/sbin',
    command => "aideinit",
    # don't run if aide database has already been installed
    unless  => "test -f $aide_db_path",
    user    => 'root',
    require => Package['aide'],
  }
  # install the newly-generated database
  exec { 'install-aide-db':
    path    => '/bin:/usr/bin',
    command => 'cp /var/lib/aide/aide.db.new /var/lib/aide/aide.db',
    # don't run if aide database has already been installed
    unless  => "test -f $aide_db_path",
    user    => 'root',
    require => Exec['aideinit'],
  }
  # builds a new Aide config file
  exec { 'update-aide-conf':
    path    => '/bin:/usr/bin',
    command => 'update-aide.conf',
    # don't run if aide database has already been installed
    unless  => "test -f $aide_db_path",
    user    => 'root',
    require => Exec['install-aide-db'],
  }
  # copy newly generated config file to the /etc/aide directory
  exec { 'copy-aide-conf':
    path    => '/bin:/usr/bin',
    command => 'cp /var/lib/aide/aide.conf.autogenerated /etc/aide/aide.conf',
    # don't run if aide database has already been installed
    unless  => "test -f $aide_db_path",
    user    => 'root',
    require => Exec['update-aide-conf'],
  }
}
